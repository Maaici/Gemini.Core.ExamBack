// <auto-generated />
using System;
using Gemini.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gemini.Models.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20190930061317_addEnabled")]
    partial class addEnabled
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Gemini.Models.Sys_Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActionName");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<string>("Description");

                    b.Property<int>("Enabled");

                    b.Property<int>("MenuId");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Sys_Action");
                });

            modelBuilder.Entity("Gemini.Models.Sys_Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<string>("Description");

                    b.Property<int>("Enabled");

                    b.Property<string>("ICON");

                    b.Property<string>("MenuIndex");

                    b.Property<string>("MenuName");

                    b.Property<string>("MenuUrl");

                    b.Property<string>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<int>("SortCode");

                    b.HasKey("Id");

                    b.ToTable("sys_Menus");
                });

            modelBuilder.Entity("Gemini.Models.Sys_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<string>("Description");

                    b.Property<int>("Enabled");

                    b.Property<string>("Remark");

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.ToTable("sys_Roles");
                });

            modelBuilder.Entity("Gemini.Models.Sys_RoleMenu", b =>
                {
                    b.Property<int>("MenuId");

                    b.Property<int>("RoleId");

                    b.HasKey("MenuId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("sys_RoleMenus");
                });

            modelBuilder.Entity("Gemini.Models.Sys_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<string>("CreateUser");

                    b.Property<DateTime?>("EditTime");

                    b.Property<string>("EditUser");

                    b.Property<string>("Email");

                    b.Property<int>("Enabled");

                    b.Property<string>("Mobile");

                    b.Property<string>("Password");

                    b.Property<string>("RealName");

                    b.Property<string>("Remark");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("sys_Users");
                });

            modelBuilder.Entity("Gemini.Models.Sys_UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("sys_UserRoles");
                });

            modelBuilder.Entity("Gemini.Models.Sys_Action", b =>
                {
                    b.HasOne("Gemini.Models.Sys_Menu", "Menu")
                        .WithMany("Actions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gemini.Models.Sys_RoleMenu", b =>
                {
                    b.HasOne("Gemini.Models.Sys_Menu", "Menu")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gemini.Models.Sys_Role", "Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gemini.Models.Sys_UserRole", b =>
                {
                    b.HasOne("Gemini.Models.Sys_Role", "Role")
                        .WithMany("userRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gemini.Models.Sys_User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
